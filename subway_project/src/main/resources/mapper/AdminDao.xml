<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- LoginVerification_Dao의 위치를 알려주기 위해 namespace를 씀 -->
<mapper namespace="com.springlec.base.dao.admin.AdminDao">
	
	<!-- adminLogin을 위한 query -->
	<select id="loginVerification" resultType="com.springlec.base.model.admin.LoginVerification_Dto">
		SELECT mid, mpw
		FROM member
		WHERE mid = #{mid}
	</select>
	
	<!-- ********************************************************* -->
	<!-- ************************ Product ************************ -->
	
	<!--************************ ProductInsertDB TASK query *********************-->
	<insert id="insertMenuAction">
		INSERT INTO menu (mnctg, mnname, mnengname, mninfo, mnimg, mnprice)
		VALUES (#{mnctg}, #{mnname}, #{mnengname}, #{mninfo}, #{mnimg}, #{mnprice})
	</insert>
	<insert id="insertMenuSpecAction">
		INSERT INTO menuspec (mncode, mngram, mnkcal, mnprotein, mnfat, mnsugar, mnnatrum)
		VALUES
		((SELECT mncode FROM menu ORDER BY mncode DESC LIMIT 1), 
				#{mngram}, #{mnkcal}, #{mnprotein}, #{mnfat}, #{mnsugar}, #{mnnatrum})
	</insert>
	<!--********************* ProductInsertDB Task query End ******************-->
	
	<!-- ProductListCount Task query -->
	<select id="productListCount">
		SELECT count(*)
		FROM menu
		WHERE ${selectSearch} LIKE #{search} OR mnengname LIKE #{search} 
	</select>
	
	<!-- ProductListSelect Task query  -->
	<select id="productListSelect" resultType="com.springlec.base.model.admin.ProductCrudDto">
		SELECT mncode, mnctg, mnname, mnengname, mninfo, mnimg, mnprice 
		FROM menu
		WHERE ${selectSearch} LIKE #{search} OR mnengname LIKE #{search}
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="productDetail" resultType="com.springlec.base.model.admin.ProductCrudDto">
		SELECT m.mncode, m.mnctg, m.mnname, m.mnengname, m.mninfo, m.mnimg, m.mnprice,
				s.mngram, s.mnkcal, s.mnprotein, s.mnfat, s.mnsugar, s.mnnatrum
		FROM menu AS m, menuspec AS s
		WHERE m.mncode = #{mncode} AND m.mncode = s.mncode
	</select>
	
	<!--************************ ProductInsertDB TASK query *********************-->
	<update id="updateMenuAction">
		UPDATE menu
		SET mnctg = #{mnctg}, mnname = #{mnname}, mnengname = #{mnengname}, 
		mninfo = #{mninfo}, mnprice = #{mnprice}
		WHERE mncode = #{mncode}
	</update>
	<update id="updateMenuSpecAction">
		UPDATE menuspec
		SET mngram = #{mngram}, mnkcal = #{mnkcal}, mnprotein = #{mnprotein}, 
		    mnfat = #{mnfat}, mnsugar = #{mnsugar}, mnnatrum = #{mnnatrum}
		WHERE mncode = #{mncode}
	</update>
	<update id="updateImgAction">
		UPDATE menu
		SET mnimg = #{mnimg}
		WHERE mncode = #{mncode}
	</update>
	<!--************************ ProductInsertDB TASK query End *********************-->
	
	<!-- ************************ Product End ************************ -->
	<!-- ************************************************************* -->


	<!-- ************************************************************* -->
	<!-- ************************SalesStatus************************** -->
	
	<!-- ********************monthlySalesChartData Task******************** -->
	<select id="monthlySalesChartData" resultType="com.springlec.base.model.admin.SalesStatusDto">
		SELECT MONTH (odate) as omonth, SUM(oprice) as omonthsum
		FROM orderpurchase
		WHERE YEAR (odate) BETWEEN YEAR (NOW())-1 AND YEAR (NOW())
		GROUP BY omonth
	</select>
	
	<select id="daySalesChartData" resultType="com.springlec.base.model.admin.SalesStatusDto">
		SELECT DATE_FORMAT(odate, '%Y-%m-%d') as oday, SUM(oprice) as odaysum
		FROM orderpurchase
		WHERE odate BETWEEN #{startDay} AND #{endDay}
		GROUP BY oday
	</select>
	<!-- *******************monthlySalesChartData Task End****************** -->
	



	<!-- ************************SalesStatus End************************ -->
	<!-- *************************************************************** -->
</mapper>